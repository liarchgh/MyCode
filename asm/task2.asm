DATA SEGMENT
  MUX1 DW ?
  MUX2 DW ?
  MIN1 DW ?
  MIN2 DW ?
  STRING DB 'Please enter the size of data and then enter the data .All numbers must be decimal unsigned integer in range 0-65535:(Space or enter as the interval)',10,'$'
  STR_END DB 10,'MUX1(unsigned maxminum),MUX2(signed maxminum),MIN1(unsigned minminum),MIN2(signed minminum) are',10,'$'
  STR_ERROR DB 10,'ERROR',10,'$'
  STR_NO DB 'There is no data!$'
DATA ENDS

STACK SEGMENT
STACK ENDS

CODE SEGMENT
  ASSUME CS:CODE,DS:DATA,SS:STACK
START:
  MOV AX,DATA
  MOV DS,AX
  MOV AX,STACK
  MOV SS,AX
  LEA DX,STRING
  MOV AH,9
  INT 21H
  CALL SCAN
  CMP BX,0
  JZ NO_END
  MOV CX,BX
  CALL SCAN
  MOV MUX1,BX
  MOV MUX2,BX
  MOV MIN1,BX
  MOV MIN2,BX
  DEC CX
CSTART:
  CMP CX,0
  JZ CEND
  CALL SCAN
  CMP BX,MUX1
  JA R1
CON1:
  CMP BX,MUX2
  JG R2
CON2:
  CMP MIN1,BX
  JA R3
CON3:
  CMP MIN2,BX
  JG R4
CON4:
  DEC CX
  JMP CSTART
CEND:
  LEA DX,STR_END
  MOV AH,9
  INT 21H
  MOV BL,0
  MOV AX,MUX1
  CALL PRINT
  MOV BL,1
  CALL PRINT_K
  MOV AX,MUX2
  CALL PRINT
  MOV BL,0
  CALL PRINT_K
  MOV AX,MIN1
  CALL PRINT
  MOV BL,1
  CALL PRINT_K
  MOV AX,MIN2
  CALL PRINT
  CALL PRINT_H
  MOV AH,4CH
  INT 21H
NO_END:
	LEA DX,STR_NO
	MOV AH,9
	INT 21H
	MOV AH,4CH
  INT 21H

R1:
  MOV MUX1,BX
  JMP CON1
R2:
  MOV MUX2,BX
  JMP CON2
R3:
  MOV MIN1,BX
  JMP CON3
R4:
  MOV MIN2,BX
  JMP CON4

SCAN PROC;NUMBER IS IN BX
  PUSH CX
  MOV BX,0
RE_SCAN:
  MOV AH,1
  INT 21H
  CMP AL,' '
  JZ RE_SCAN
  CMP AL,13
  JZ RE_SCAN
  CMP AL,'0'
  JB ERROR_END
  CMP AL,'9'
  JA ERROR_END
S_F:
  MOV CH,AL
  MOV AX,BX
  MOV BX,10
  MUL BX
  JB ERROR_END
  MOV BX,AX
  MOV AL,'0'
  SUB CH,AL
  MOV AL,CH
  MOV AH,0
  ADD BX,AX
  JB ERROR_END
  MOV AH,1
  INT 21H
  CMP AL,' '
  JZ SC_END
  CMP AL,13
  JZ SC_END
  CMP AL,'0'
  JB ERROR_END
  CMP AL,'9'
  JA ERROR_END
  JMP S_F
SC_END:
  POP CX
  RET
SCAN ENDP

ERROR_END:
  LEA DX,STR_ERROR
  MOV AH,9
  INT 21H
  MOV AH,4CH
  INT 21H

PRINT PROC
  MOV DX,22
  PUSH DX
  MOV CX,AX
  CMP BL,0
  JZ CON_PRINT
  CMP CX,0
  JGE CON_PRINT
  MOV DL,'-'
  MOV AH,2
  INT 21H
  MOV AX,0
  SUB AX,CX
CON_PRINT:
  MOV BX,10
  MOV DX,0
  DIV BX
  MOV CX,AX
  ADD DL,30H
  PUSH DX
  MOV AX,CX
  CMP AX,0
  JNZ CON_PRINT
P_N:
  POP DX
  CMP DX,22
  JZ P_END
  MOV AH,2
  INT 21H
  JMP P_N
P_END:
  RET
PRINT ENDP

PRINT_K PROC
  MOV AH,2
  MOV DL,' '
  INT 21H
  RET
PRINT_K ENDP

PRINT_H PROC
  MOV AH,02H
  MOV DL,13
  INT 21H
  MOV DL,10
  INT 21H
  RET
PRINT_H ENDP

CODE ENDS
  END START
